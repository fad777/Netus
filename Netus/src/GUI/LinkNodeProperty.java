
/*
 * LinkNodeProperty.java
 *
 */

package GUI;
import java.util.ArrayList;
import java.util.Collections;

public class LinkNodeProperty extends javax.swing.JDialog {

LinkNode par;
ArrayList statelist;
ArrayList items = new ArrayList();
ArrayList objList = new ArrayList();
InfluenceGUI root;
    /** Creates new form NodeProperty */
    public LinkNodeProperty(LinkNode parent,InfluenceGUI root, boolean modal) {
        initComponents();
        par=parent;
        this.setLocationRelativeTo(null);
        this.root=root;
        statelist=new ArrayList();
        
        
        for(int i=0;i<root.nodes.size();i++)
        {
            ShapeNode sn = (ShapeNode)root.nodes.get(i);
           
            
            if(((ShapeNode)root.nodes.get(i)).node.type==node_type.LINK_NODE || 
                ((ShapeNode)root.nodes.get(i)).node.type==node_type.MODEL_LINK_NODE ||
                    ((ShapeNode)root.nodes.get(i)).node.type==node_type.UPDATE_LINK_NODE)
        
            continue;
           
            items.add(sn.getFullName());
             objList.add(sn);
            
            
        }
       // Collections.sort(items);
        //Collections.sort(objList);
        for(Object str: items){
            
            parentNameCombo.addItem((String)str);
            childNameCombo.addItem((String)str);
        }
        
        nodeNameField.setText(par.getFullName());
        kindTextField.setText(par.node.type.toString());
    if(par.parent !=null && par.child!=null)
    {
            parentNameCombo.select(par.parent.node.name+par.parent.node.getNodeId());
            childNameCombo.select(par.child.node.name+par.child.node.getNodeId());
    }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        parentNameCombo = new java.awt.Choice();
        childNameCombo = new java.awt.Choice();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        makeLinkButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        nodeNameField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        kindTextField = new javax.swing.JTextField();
        okButton = new javax.swing.JButton();
        chkIsDelayLink = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Linker Property Dialog");

        parentNameCombo.setBackground(java.awt.Color.white);

        childNameCombo.setBackground(java.awt.Color.white);

        jLabel1.setText("Parent Node");

        jLabel2.setText("Child Node");

        makeLinkButton.setText("Make Link");
        makeLinkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeLinkButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        nodeNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nodeNameFieldActionPerformed(evt);
            }
        });

        jLabel3.setText("Node name");

        jLabel4.setText("Kind");

        kindTextField.setEditable(false);

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        chkIsDelayLink.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        chkIsDelayLink.setText("Delay link");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(kindTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(parentNameCombo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(nodeNameField))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(childNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkIsDelayLink, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(okButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(makeLinkButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, makeLinkButton, okButton});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {childNameCombo, kindTextField, nodeNameField, parentNameCombo});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(nodeNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkIsDelayLink))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(kindTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(parentNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(childNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(makeLinkButton)
                    .addComponent(cancelButton)
                    .addComponent(okButton))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void makeLinkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeLinkButtonActionPerformed
        // TODO add your handling code here:
      
      ShapeNode prnt=(ShapeNode)root.nodes.get(root.nodes.indexOf(objList.get(parentNameCombo.getSelectedIndex())));
      ShapeNode chld=(ShapeNode)root.nodes.get(root.nodes.indexOf(objList.get(childNameCombo.getSelectedIndex())));
      
      if(prnt.label.isEmpty() || chld.label.isEmpty()){
          javax.swing.JOptionPane.showMessageDialog(this, "Both parent and child nodes must have a type. Please select their types");
         
          this.dispose();
          return;
      }
        
      if(prnt.node.states==null || chld.node.states==null){
          javax.swing.JOptionPane.showMessageDialog(this, "Both parent and child nodes must have states. Please enter their states");
         
          this.dispose();
          return;
      }
      
      if(chkIsDelayLink.isSelected()){
          try{
               if(!par.label.equalsIgnoreCase(LinkNode.DelayLinkLabel)) {
                 this.root.delayLinkCounter++;
             }
             prnt.dalayLinks.add(chld.label.toString());
             par.parent = prnt;
             par.child =chld;
             par.repaint();
             par.linkNodeColor = LinkNode.linkColorDelay;
             par.label = LinkNode.DelayLinkLabel;
             par.node.label=par.label;
             par.setToolTipText("Delay link");
             
             if(!this.root.nodes.contains(par)) {
                 this.root.delayLinkCounter++;
             }
             // Check if exists
            if(par.label.equalsIgnoreCase(LinkNode.DelayLinkLabel)){
                if(!root.delayedLinks.contains(par)){
                    root.delayedLinks.add(par);
                }
                this.dispose();
           
          
          }
              return;
          }
          catch(Exception ex){
              ex.printStackTrace();
          }
      }
      else{ // if it was selected and now unselected
             if(root.delayedLinks.contains(par)){
                 java.util.Random rand = new java.util.Random();
                    root.delayedLinks.remove(par);
                    par.label = par.label + (rand.nextInt());
                }
      }

      this.par.makeLink(prnt,chld);
      if(chld.node.getKind().toString().equalsIgnoreCase(node_type.MODEL_NODE.toString())){
          ((ModelNode)chld).ModelLinkParentLinkNode=this.par;
      }
      
     // par.node.name=nodeNameField.getText();
      
      this.dispose();
    }//GEN-LAST:event_makeLinkButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void nodeNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nodeNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nodeNameFieldActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        // TODO add your handling code here:
        this.par.node.name=nodeNameField.getText();
         this.par.repaint();
        this.dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    /**
    * @param args the command line arguments
    */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private java.awt.Choice childNameCombo;
    private javax.swing.JCheckBox chkIsDelayLink;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField kindTextField;
    private javax.swing.JButton makeLinkButton;
    private javax.swing.JTextField nodeNameField;
    private javax.swing.JButton okButton;
    private java.awt.Choice parentNameCombo;
    // End of variables declaration//GEN-END:variables

}
