
/*
 * NodeProperty.java
 */

package GUI;

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;

public class NodeProperty extends javax.swing.JDialog {
ShapeNode par;
ArrayList statelist;
Boolean isLoading = false;
private static int Ocounter  =0;
private static int OOcounter =0;
private static int sCounter =0;
private static int osCounter =0;
private static int odCounter =0;
    /** Creates new form NodeProperty */
    public NodeProperty(ShapeNode parent, boolean modal) {
        initComponents();
        par=parent;
        this.setLocationRelativeTo(par);
        statelist=new ArrayList();
        this.setTitle("Property Editor Dialog");
        nodeNameField.setText(par.getFullName());
        if(par.node.states!=null)
        for(int i=0;i<par.node.states.length;i++)
        {
            statelist.add(par.node.states[i]);
            list1.add(par.node.states[i]);
        }
        jTextField3.setText(par.node.type.toString());
        btnUpdate.setEnabled(false);
        btnRemove.setEnabled(false);
    }
    public NodeProperty(){
        initComponents();
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nodeNameField = new javax.swing.JTextField();
        stateTextField = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnOk = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        list1 = new java.awt.List();
        btnUpdate = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        btnRemove = new javax.swing.JButton();
        cboNameList = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        txtLabel = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cboHorizon = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setModal(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        stateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateTextFieldActionPerformed(evt);
            }
        });
        stateTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                stateTextFieldKeyPressed(evt);
            }
        });

        btnAdd.setText("Add >>");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnOk.setText("Ok");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        jLabel1.setText("Node Name");

        jLabel2.setText("State");

        jLabel3.setText("States");

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        list1.setBackground(java.awt.Color.white);
        list1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                list1ItemStateChanged(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel4.setText("Kind");

        jTextField3.setEditable(false);

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        cboNameList.setToolTipText("Select Name");
        cboNameList.setDoubleBuffered(true);
        cboNameList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboNameListMouseClicked(evt);
            }
        });
        cboNameList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboNameListActionPerformed(evt);
            }
        });

        jLabel5.setText("Label");

        txtLabel.setEditable(false);

        jLabel6.setText("Horizon");

        cboHorizon.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2" }));
        cboHorizon.setToolTipText("Select Name");
        cboHorizon.setDoubleBuffered(true);
        cboHorizon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboHorizonMouseClicked(evt);
            }
        });
        cboHorizon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboHorizonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stateTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAdd)
                            .addComponent(btnUpdate)
                            .addComponent(btnRemove))
                        .addGap(80, 80, 80))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nodeNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                            .addComponent(btnOk)
                            .addComponent(txtLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addComponent(btnCancel))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cboNameList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(cboHorizon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(list1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdd, btnCancel, btnOk, btnUpdate});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {nodeNameField, stateTextField});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(list1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nodeNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(cboNameList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(cboHorizon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdd))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(stateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(btnUpdate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemove)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOk)
                    .addComponent(btnCancel))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        statelist.add(stateTextField.getText());
        list1.add(stateTextField.getText());
        stateTextField.setText("");
        stateTextField.requestFocus();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        String oldName = par.node.getFullName();
        boolean renamed = false;
        this.setAlwaysOnTop(false);
        for(Object n:par.rootpane.nodes){
            String name =((ShapeNode)n).getFullName();
            
            if((name.equalsIgnoreCase(nodeNameField.getText()) && !name.equalsIgnoreCase(oldName)) ){
                
                try{
                String numStr = name.replaceAll("\\D+", "");
                Integer num = Integer.parseInt(numStr);
                ++num;
                name = name.replace(numStr,num.toString());
                nodeNameField.setText(name);
                renamed=true; 
                }
                catch(Exception ex){}
                
            }
        }
        if(renamed) javax.swing.JOptionPane.showMessageDialog(null, "Name already exits. Renamed!",
                                                                 "Name Conflicts",
                                                                 JOptionPane.WARNING_MESSAGE);  
        
        if(par.label.isEmpty()){
         //genLabel(par,cboNameList.getSelectedItem().toString().trim(),"1");
            javax.swing.JOptionPane.showMessageDialog(null, "Node subtype must be selected",
                                                                 "Unknown Subtype !",
                                                                 JOptionPane.WARNING_MESSAGE);  
            return;
        }
        par.label=txtLabel.getText();
        par.node.name=nodeNameField.getText();
        par.fullname = nodeNameField.getText();
        par.node.containerName=nodeNameField.getText();
        par.node.setNumstates(statelist.size());
        
        for(int i=0;i<statelist.size();i++)
        {
            par.node.states[i]=statelist.get(i).toString();
        }
        
        
        par.node.label= par.label;
        par.node.setCPTstates();
        par.repaint();
        this.dispose();
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelActionPerformed

    private void list1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_list1ItemStateChanged
        // TODO add your handling code here:
        btnUpdate.setEnabled(true);
        btnRemove.setEnabled(true);
    }//GEN-LAST:event_list1ItemStateChanged

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
          int selectedIndex = list1.getSelectedIndex();
        try{
            if(selectedIndex>=0){
            statelist.remove(list1.getSelectedItem());
            list1.remove(list1.getSelectedIndex());
            statelist.add(stateTextField.getText());
            list1.add(stateTextField.getText());
            btnUpdate.setEnabled(false);
            }
        }
        catch(Exception ex){
           ex.printStackTrace(); 
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void stateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stateTextFieldActionPerformed

    private void stateTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stateTextFieldKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            statelist.add(stateTextField.getText());
            list1.add(stateTextField.getText());
            stateTextField.setText("");
            stateTextField.requestFocus();
        }
    }//GEN-LAST:event_stateTextFieldKeyPressed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        int selectedIndex = list1.getSelectedIndex();
        try{ 
            if(selectedIndex>=0){
               
                statelist.remove(list1.getSelectedItem());
                list1.remove(selectedIndex);
                btnRemove.setEnabled(false);
            }
        }
        catch(Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    
    private void cboNameListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboNameListActionPerformed
          // TODO add your handling code here:
       
     //  nodeNameField.setText(cboNameList.getSelectedItem().toString());
        if(!isLoading){
         genLabel(par,cboNameList.getSelectedItem().toString().trim(),cboHorizon.getSelectedItem().toString().trim());
        }
        isLoading =false;
        // txtLabel.setText(par.label);
        
    }//GEN-LAST:event_cboNameListActionPerformed

    public void genLabel(ShapeNode par,String prefix,String horiz){
            isLoading =false;
            Node node = par.node;
            String label =prefix;
            String label2 ="";
            char c ;
            int charLen = 65;
            boolean newLabel =false;
            if(par.label.isEmpty() ) newLabel=true;
           
          
            if(node.type==node_type.NATURE_NODE){
               char nnPrefix ;  
               if((prefix.equalsIgnoreCase("O") )){
                    nnPrefix  =  'J';
                int asciiCount = (nnPrefix + Ocounter) > 90 ? (charLen+Ocounter-15):nnPrefix + Ocounter;
               c='\0'; //(char)(asciiCount);
                //label2 = (String.format("%s%s%s",label , c,horiz));
                 label2 = (String.format("%s%s",label,horiz));
                Ocounter++;
               }
               else if((prefix.equalsIgnoreCase("OO"))){
                 nnPrefix  =  'J';
                int asciiCount = (nnPrefix +OOcounter) > 90 ? (charLen+OOcounter-15):nnPrefix + OOcounter;
                c= (char)(asciiCount);
                label2 = (String.format("%s%s",label,horiz));
                OOcounter++;
               }
               else if((prefix.equalsIgnoreCase("OS"))){
                nnPrefix  =  'X';
                    //int asciiCount = (nnPrefix +par.getNodeId()-1) > 90 ? (charLen+par.getNodeId()-4):nnPrefix + par.getNodeId()-1;
                    int asciiCount = (nnPrefix +osCounter) > 90 ? (charLen+osCounter-3):nnPrefix + osCounter;
                    c= (char) (asciiCount);
                    label2 = (String.format("%s%s%s",label , c,horiz));
                    osCounter++;
               }
                else if((prefix.equalsIgnoreCase("OD"))){
                nnPrefix  =  'X';
                   
                    int asciiCount = (nnPrefix +odCounter) > 90 ? (charLen+odCounter-3):nnPrefix + odCounter;
                    c= (char) (asciiCount);
                    label2 = (String.format("%s%s%s",label , c,horiz));
                    odCounter++;
               }
                else{
                    nnPrefix  =  'X';
                    //int asciiCount = (nnPrefix +par.getNodeId()-1) > 90 ? (charLen+par.getNodeId()-4):nnPrefix + par.getNodeId()-1;
                    int asciiCount = (nnPrefix +sCounter) > 90 ? (charLen+sCounter-3):nnPrefix + sCounter;
                    c= (char) (asciiCount);
                    label2 = (String.format("%s%s%s",label , c,horiz));
                    sCounter++;
               }
            }
            else if(node.type==node_type.DECISION_NODE){
              
                label="D";
                label2 =(prefix+horiz);
            }
            else if(node.type==node_type.UTILITY_NODE){
               
                label="U";
                 label2 =(label+horiz);
            }
            else if(node.type==node_type.LINK_NODE){
                cboNameList.addItem("L");
                 label="L";
                 label2 =(label+horiz);
            }
            else if(node.type==node_type.MODEL_NODE){
              
                 label="Mod";
                 label2 =(label+horiz);
            }
         
          
          
           
           
            txtLabel.setText(label2);
            nodeNameField.setText(label2);
           if(newLabel) par.label=txtLabel.getText();
          
    }
    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
                // TODO add your handling code here:
          
           
            
    }//GEN-LAST:event_formWindowActivated

    private void cboNameListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboNameListMouseClicked
        // TODO add your handling code here:
            
    }//GEN-LAST:event_cboNameListMouseClicked

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
         isLoading =true;
          Node node = par.node;
            String label ="";
            String label2="";
            char c ;
            int charLen = 65;
            
            if(node.type==node_type.NATURE_NODE){
               cboNameList.addItem("S");
               cboNameList.addItem("OS");
               cboNameList.addItem("O");
               cboNameList.addItem("OD");
               cboNameList.addItem("OO");
               label="S"; 
               int asciiCount = ('X'+par.getNodeId()-1) > 90 ? (65+par.getNodeId()-4):'X'+ par.getNodeId()-1;
               c= (char) (asciiCount);
               // txtLabel.setText(label+ c+"1");
            }
            else if(node.type==node_type.DECISION_NODE){
                cboNameList.addItem("D");
                //cboNameList.addItem("OD");
                label="D";
               // txtLabel.setText(label+ par.getNodeId());
            }
            else if(node.type==node_type.UTILITY_NODE){
                cboNameList.addItem("U");
                label="U";
              //  txtLabel.setText(label+ par.getNodeId());
            }
            else if(node.type==node_type.LINK_NODE){
                cboNameList.addItem("L");
                 label="L";
               //  txtLabel.setText(label+ par.getNodeId());
            }
            else if(node.type==node_type.MODEL_NODE){
                cboNameList.addItem("Mod");
                 label="Mod";
              //   txtLabel.setText(label+ par.getNodeId());
            }
            
             nodeNameField.setText(par.node.getFullName());
             
             
             
             
                txtLabel.setText(par.label);
             
             //else txtLabel.setText(par.label.toString());
             
    }//GEN-LAST:event_formComponentShown

   
    
    private void cboHorizonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboHorizonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cboHorizonMouseClicked

    private void cboHorizonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboHorizonActionPerformed
        // TODO add your handling code here:
         if(!isLoading){
         genLabel(par,cboNameList.getSelectedItem().toString().trim(),cboHorizon.getSelectedItem().toString().trim());
        }
          isLoading =false;
    }//GEN-LAST:event_cboHorizonActionPerformed

    
    /**
    * @param args the command line arguments
    */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox cboHorizon;
    private javax.swing.JComboBox cboNameList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jTextField3;
    private java.awt.List list1;
    private javax.swing.JTextField nodeNameField;
    private javax.swing.JTextField stateTextField;
    private javax.swing.JTextField txtLabel;
    // End of variables declaration//GEN-END:variables

}
